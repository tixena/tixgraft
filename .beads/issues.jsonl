{"id":"graft-1","title":"Restore schema pattern validation for repository URLs","description":"Add back regex patterns to docs/schema.json for repository field to validate Git URLs and file: prefix","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-26T11:07:08.190904-04:00","updated_at":"2025-10-26T11:11:42.114855-04:00","closed_at":"2025-10-26T11:11:42.114855-04:00"}
{"id":"graft-10","title":"Refactor src/operations/copy.rs to use System","description":"Accept System trait parameter. Replace all filesystem operations with system methods.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.861995-04:00","updated_at":"2025-10-26T12:02:37.797997-04:00","closed_at":"2025-10-26T12:02:37.797997-04:00","dependencies":[{"issue_id":"graft-10","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.862751-04:00","created_by":"daemon"}]}
{"id":"graft-11","title":"Refactor src/git/repository.rs to use System","description":"Update create_local_source to accept System. Replace env var and current_dir calls with system methods.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.92832-04:00","updated_at":"2025-10-26T12:05:39.243151-04:00","closed_at":"2025-10-26T12:05:39.243151-04:00","dependencies":[{"issue_id":"graft-11","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.929138-04:00","created_by":"daemon"}]}
{"id":"graft-12","title":"Refactor src/config/validation.rs to use System","description":"Update validation functions to accept System. Replace env var existence checks with system.env_var.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.992623-04:00","updated_at":"2025-10-26T12:24:40.886762-04:00","closed_at":"2025-10-26T12:24:40.886779-04:00","dependencies":[{"issue_id":"graft-12","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.993118-04:00","created_by":"daemon"}]}
{"id":"graft-13","title":"Update src/operations/pull.rs orchestration","description":"Store System in PullOperation struct. Thread System through all sub-operations.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.076152-04:00","updated_at":"2025-10-26T12:24:50.998315-04:00","closed_at":"2025-10-26T12:24:50.998317-04:00","dependencies":[{"issue_id":"graft-13","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.07667-04:00","created_by":"daemon"}]}
{"id":"graft-14","title":"Update main.rs entry point","description":"Create RealSystem instance and pass to PullOperation.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.142345-04:00","updated_at":"2025-10-26T12:25:01.180828-04:00","closed_at":"2025-10-26T12:25:01.180835-04:00","dependencies":[{"issue_id":"graft-14","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.142862-04:00","created_by":"daemon"}]}
{"id":"graft-15","title":"Convert tests/local_tests.rs to MockSystem","description":"Replace all unsafe env operations with MockSystem. Replace tempdir with in-memory filesystem. Remove cleanup code.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.204513-04:00","updated_at":"2025-10-26T12:25:46.450771-04:00","closed_at":"2025-10-26T12:25:46.450833-04:00","dependencies":[{"issue_id":"graft-15","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.205082-04:00","created_by":"daemon"}]}
{"id":"graft-16","title":"Convert tests/config_tests.rs to MockSystem","description":"Replace unsafe blocks with MockSystem setup. Update all filesystem operations.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.269955-04:00","updated_at":"2025-10-26T12:27:55.476223-04:00","closed_at":"2025-10-26T12:27:55.476234-04:00","dependencies":[{"issue_id":"graft-16","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.270467-04:00","created_by":"daemon"}]}
{"id":"graft-17","title":"Convert tests/cli_tests.rs to MockSystem","description":"Remove unsafe environment mutations. Use MockSystem for all operations.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.338888-04:00","updated_at":"2025-10-26T12:28:06.53257-04:00","closed_at":"2025-10-26T12:28:06.532573-04:00","dependencies":[{"issue_id":"graft-17","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.339352-04:00","created_by":"daemon"}]}
{"id":"graft-18","title":"Verify all unsafe blocks removed","description":"Search codebase for unsafe keyword. Ensure only legitimate uses remain.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.402429-04:00","updated_at":"2025-10-26T12:28:21.185799-04:00","closed_at":"2025-10-26T12:28:21.185801-04:00","dependencies":[{"issue_id":"graft-18","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.402999-04:00","created_by":"daemon"}]}
{"id":"graft-19","title":"Run full test suite and verification","description":"Execute 'just test', verify all tests pass, run cargo clippy.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:36.467651-04:00","updated_at":"2025-10-26T12:30:12.053556-04:00","closed_at":"2025-10-26T12:30:12.053596-04:00","dependencies":[{"issue_id":"graft-19","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:36.468091-04:00","created_by":"daemon"}]}
{"id":"graft-2","title":"Restrict local repository detection to file: prefix only","description":"Update src/git/repository.rs and src/config/validation.rs to ONLY accept file: prefix for local repos. Remove support for ~, ./, ../, and bare / paths. This makes it explicit and leaves room for future s3:, gdrive:, etc.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-26T11:07:14.110599-04:00","updated_at":"2025-10-26T11:13:25.616687-04:00","closed_at":"2025-10-26T11:13:25.616687-04:00"}
{"id":"graft-20","title":"Update Cargo.toml with tracing dependencies","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.516753-04:00","updated_at":"2025-10-26T13:01:35.706466-04:00","closed_at":"2025-10-26T13:01:35.706466-04:00","dependencies":[{"issue_id":"graft-20","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.517477-04:00","created_by":"daemon"}]}
{"id":"graft-21","title":"Add --verbose flag to CLI args in src/cli/args.rs","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.580798-04:00","updated_at":"2025-10-26T13:01:47.2437-04:00","closed_at":"2025-10-26T13:01:47.2437-04:00","dependencies":[{"issue_id":"graft-21","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.581363-04:00","created_by":"daemon"}]}
{"id":"graft-22","title":"Initialize tracing subscriber in src/main.rs","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.642533-04:00","updated_at":"2025-10-26T13:02:05.817752-04:00","closed_at":"2025-10-26T13:02:05.817752-04:00","dependencies":[{"issue_id":"graft-22","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.643023-04:00","created_by":"daemon"}]}
{"id":"graft-23","title":"Replace logging in src/main.rs with tracing macros","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.703036-04:00","updated_at":"2025-10-26T13:02:05.828416-04:00","closed_at":"2025-10-26T13:02:05.828416-04:00","dependencies":[{"issue_id":"graft-23","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.70352-04:00","created_by":"daemon"}]}
{"id":"graft-24","title":"Replace logging in src/operations/pull.rs with tracing macros","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.768299-04:00","updated_at":"2025-10-26T13:02:52.60587-04:00","closed_at":"2025-10-26T13:02:52.60587-04:00","dependencies":[{"issue_id":"graft-24","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.768774-04:00","created_by":"daemon"}]}
{"id":"graft-25","title":"Replace logging in src/operations/commands.rs with tracing macros","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.830726-04:00","updated_at":"2025-10-26T13:03:19.288349-04:00","closed_at":"2025-10-26T13:03:19.288349-04:00","dependencies":[{"issue_id":"graft-25","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.832266-04:00","created_by":"daemon"}]}
{"id":"graft-26","title":"Add tracing imports to src/lib.rs","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.895039-04:00","updated_at":"2025-10-26T13:03:28.778985-04:00","closed_at":"2025-10-26T13:03:28.778985-04:00","dependencies":[{"issue_id":"graft-26","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.895724-04:00","created_by":"daemon"}]}
{"id":"graft-27","title":"Test verbose implementation with and without --verbose flag","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T13:01:14.956739-04:00","updated_at":"2025-10-26T13:26:13.698036-04:00","closed_at":"2025-10-26T13:26:13.698036-04:00","dependencies":[{"issue_id":"graft-27","depends_on_id":"graft-4","type":"discovered-from","created_at":"2025-10-26T13:01:14.957204-04:00","created_by":"daemon"}]}
{"id":"graft-28","title":"Remove colored crate usage from log messages to fix ANSI escape code display","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-26T13:41:13.631926-04:00","updated_at":"2025-10-26T13:43:42.41655-04:00","closed_at":"2025-10-26T13:43:42.41655-04:00"}
{"id":"graft-29","title":"Investigate and fix sparse checkout source path verification issue","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T16:53:27.677767-04:00","updated_at":"2025-10-26T17:14:14.342012-04:00","closed_at":"2025-10-26T17:14:14.342012-04:00"}
{"id":"graft-3","title":"Remove unsafe blocks from tests or document why they're necessary","description":"Evaluate unsafe blocks in tests (std::env::set_var). Either: 1) Add serial_test crate for proper isolation, 2) Refactor to avoid env var mutation, or 3) Document why they're necessary and safe in this context. LEAVE OPEN until user decides on approach.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:07:20.749982-04:00","updated_at":"2025-10-26T12:30:12.066055-04:00","closed_at":"2025-10-26T12:30:12.066057-04:00","comments":[{"id":1,"issue_id":"graft-3","author":"eburgos","text":"Leaving this open per user request. User wants to evaluate different approaches: 1) Add serial_test crate for test isolation, 2) Refactor to avoid env var mutation, or 3) Document why unsafe is necessary. Waiting for user decision on preferred approach.","created_at":"2025-10-26T15:14:43Z"},{"id":2,"issue_id":"graft-3","author":"eburgos","text":"Successfully eliminated all unsafe blocks by implementing System trait abstraction. All tests pass. Integration tests use Command.env() for subprocess env vars, unit tests use MockSystem with pre-configured env vars.","created_at":"2025-10-26T16:30:16Z"}]}
{"id":"graft-30","title":"Investigate why markdown files are not being replaced in text replacement operations","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T17:40:59.05112-04:00","updated_at":"2025-10-26T17:43:05.375933-04:00","closed_at":"2025-10-26T17:43:05.375933-04:00"}
{"id":"graft-31","title":"Investigate if text replacements skip files in the root of the target directory","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T17:45:49.084347-04:00","updated_at":"2025-10-26T18:04:40.914187-04:00","closed_at":"2025-10-26T18:04:40.914187-04:00"}
{"id":"graft-32","title":"Add --pull-replacement CLI flag to support text replacements","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:28:08.523867-04:00","updated_at":"2025-10-26T19:30:48.464708-04:00","closed_at":"2025-10-26T19:30:48.464708-04:00"}
{"id":"graft-33","title":"Design and implement to-command-line subcommand structure","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:28:08.589859-04:00","updated_at":"2025-10-26T19:33:36.071431-04:00","closed_at":"2025-10-26T19:33:36.071431-04:00"}
{"id":"graft-34","title":"Implement config-to-CLI serialization with proper escaping","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:28:08.651282-04:00","updated_at":"2025-10-26T19:32:15.540188-04:00","closed_at":"2025-10-26T19:32:15.540188-04:00"}
{"id":"graft-35","title":"Handle edge cases in to-command-line: multi-line values, complex escaping","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-26T19:28:08.757022-04:00","updated_at":"2025-10-26T19:34:25.200881-04:00","closed_at":"2025-10-26T19:34:25.200881-04:00"}
{"id":"graft-36","title":"Add integration tests for to-command-line command","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-26T19:28:08.827901-04:00","updated_at":"2025-10-26T19:36:22.313472-04:00","closed_at":"2025-10-26T19:36:22.313472-04:00"}
{"id":"graft-37","title":"Update documentation for to-command-line feature","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T19:28:08.890503-04:00","updated_at":"2025-10-26T19:37:43.155387-04:00","closed_at":"2025-10-26T19:37:43.155387-04:00"}
{"id":"graft-38","title":"Add --to-config CLI flag with conflicts_with constraint","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:58:53.803138-04:00","updated_at":"2025-10-26T20:13:50.195388-04:00","closed_at":"2025-10-26T20:13:50.195388-04:00"}
{"id":"graft-39","title":"Implement config builder functions from CLI args","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:58:53.867158-04:00","updated_at":"2025-10-26T20:14:33.828292-04:00","closed_at":"2025-10-26T20:14:33.828292-04:00"}
{"id":"graft-4","title":"Add a --verbose mode and change all println commands to proper log levels with tracing","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:01.565322-04:00","updated_at":"2025-10-26T13:26:13.766233-04:00","closed_at":"2025-10-26T13:26:13.766233-04:00"}
{"id":"graft-40","title":"Implement YAML serialization with clean formatting","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:58:53.93192-04:00","updated_at":"2025-10-26T20:15:39.219415-04:00","closed_at":"2025-10-26T20:15:39.219415-04:00"}
{"id":"graft-41","title":"Integrate --to-config with main.rs and lib.rs","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-26T19:58:53.995101-04:00","updated_at":"2025-10-26T20:22:04.451451-04:00","closed_at":"2025-10-26T20:22:04.451451-04:00"}
{"id":"graft-42","title":"Implement roundtrip tests for --to-config","description":"","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-26T19:58:54.062896-04:00","updated_at":"2025-10-26T20:24:58.560559-04:00","closed_at":"2025-10-26T20:24:58.560559-04:00"}
{"id":"graft-43","title":"Add edge case tests for --to-config","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-26T19:58:54.127018-04:00","updated_at":"2025-10-26T20:25:40.398924-04:00","closed_at":"2025-10-26T20:25:40.398924-04:00"}
{"id":"graft-44","title":"Update documentation for --to-config feature","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-26T19:58:54.192604-04:00","updated_at":"2025-10-26T20:26:00.900305-04:00","closed_at":"2025-10-26T20:26:00.900305-04:00"}
{"id":"graft-45","title":"Add context feature to TixGraft","description":"Implement context system with .graft.yaml support, validation, replacements, and post-commands","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-27T00:22:02.015623-04:00","updated_at":"2025-10-27T01:11:21.946507-04:00","closed_at":"2025-10-27T01:11:21.946507-04:00","labels":["context","feature"]}
{"id":"graft-46","title":"Implement context data structures and validation","description":"Create config/context.rs with context definition, validation, merging, and type coercion logic","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:18.384849-04:00","updated_at":"2025-10-27T00:24:40.876952-04:00","closed_at":"2025-10-27T00:24:40.876952-04:00","labels":["backend","context"],"dependencies":[{"issue_id":"graft-46","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:18.387289-04:00","created_by":"daemon"}]}
{"id":"graft-47","title":"Implement .graft.yaml parsing","description":"Create config/graft_yaml.rs for parsing .graft.yaml files (context, replacements, post_commands)","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:18.480865-04:00","updated_at":"2025-10-27T00:27:23.108354-04:00","closed_at":"2025-10-27T00:27:23.108354-04:00","labels":["backend","context"],"dependencies":[{"issue_id":"graft-47","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:18.483109-04:00","created_by":"daemon"}]}
{"id":"graft-48","title":"Add CLI arguments for context","description":"Add --context and --context-json flags to cli/args.rs with array accumulation support","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:18.616341-04:00","updated_at":"2025-10-27T00:42:36.80223-04:00","closed_at":"2025-10-27T00:42:36.80223-04:00","labels":["cli","context"],"dependencies":[{"issue_id":"graft-48","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:18.619044-04:00","created_by":"daemon"}]}
{"id":"graft-49","title":"Implement recursive .graft.yaml discovery","description":"Create operations/discovery.rs for recursively finding all .graft.yaml files in target directory","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:18.756542-04:00","updated_at":"2025-10-27T00:44:02.209954-04:00","closed_at":"2025-10-27T00:44:02.209954-04:00","labels":["backend","context"],"dependencies":[{"issue_id":"graft-49","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:18.76109-04:00","created_by":"daemon"}]}
{"id":"graft-5","title":"Create System trait in src/system/mod.rs","description":"Define unified System trait with env_var, current_dir, and all filesystem operations. Set up module structure.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.508699-04:00","updated_at":"2025-10-26T12:00:04.650546-04:00","closed_at":"2025-10-26T12:00:04.650546-04:00","dependencies":[{"issue_id":"graft-5","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.509914-04:00","created_by":"daemon"}]}
{"id":"graft-50","title":"Add context-based replacements","description":"Extend operations/replace.rs to support valueFromContext in replacements","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:18.866158-04:00","updated_at":"2025-10-27T00:47:15.202353-04:00","closed_at":"2025-10-27T00:47:15.202353-04:00","labels":["backend","context"],"dependencies":[{"issue_id":"graft-50","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:18.868573-04:00","created_by":"daemon"}]}
{"id":"graft-51","title":"Implement post-commands execution","description":"Create operations/post_commands.rs for executing post_commands (command and choice types)","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:18.955211-04:00","updated_at":"2025-10-27T00:48:29.780845-04:00","closed_at":"2025-10-27T00:48:29.780845-04:00","labels":["backend","context"],"dependencies":[{"issue_id":"graft-51","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:18.957252-04:00","created_by":"daemon"}]}
{"id":"graft-52","title":"Integrate context into pull operation","description":"Update operations/pull.rs to orchestrate context validation, replacements, post-commands, and cleanup","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:19.038407-04:00","updated_at":"2025-10-27T00:51:05.449929-04:00","closed_at":"2025-10-27T00:51:05.449929-04:00","labels":["backend","context"],"dependencies":[{"issue_id":"graft-52","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:19.040366-04:00","created_by":"daemon"}]}
{"id":"graft-53","title":"Add comprehensive tests for context feature","description":"Add unit and integration tests covering all context functionality, validation, and edge cases","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T00:22:19.124592-04:00","updated_at":"2025-10-27T01:07:45.490624-04:00","closed_at":"2025-10-27T01:07:45.490624-04:00","labels":["context","testing"],"dependencies":[{"issue_id":"graft-53","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:19.126201-04:00","created_by":"daemon"}]}
{"id":"graft-54","title":"Update documentation for context feature","description":"Update README.md and configuration docs with context feature examples and .graft.yaml specification","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-27T00:22:19.219219-04:00","updated_at":"2025-10-27T01:11:21.845574-04:00","closed_at":"2025-10-27T01:11:21.845574-04:00","labels":["context","docs"],"dependencies":[{"issue_id":"graft-54","depends_on_id":"graft-45","type":"discovered-from","created_at":"2025-10-27T00:22:19.220849-04:00","created_by":"daemon"}]}
{"id":"graft-55","title":"Convert config_tests.rs to use MockSystem instead of TempDir","description":"","design":"## Context\nThe config_tests.rs file currently mixes RealSystem with TempDir/fs:: operations for unit tests. These tests call `Config::load_from_file()` directly (library code), making them ideal candidates for MockSystem conversion.\n\n## Current State\nTests use `TempDir::new()` -\u003e `fs::write()` -\u003e `RealSystem` pattern\n\nExample:\n```rust\nlet temp_dir = TempDir::new().unwrap();\nlet config_path = temp_dir.path().join(\"valid.yaml\");\nfs::write(\u0026config_path, config_content).unwrap();\nlet system = RealSystem;\nlet config = Config::load_from_file(\u0026system, config_path.to_str().unwrap());\n```\n\n## Target State (MockSystem Pattern)\n```rust\nlet system = MockSystem::new()\n    .with_file(\"/test/config.yaml\", config_content.as_bytes());\nlet config = Config::load_from_file(\u0026system, \"/test/config.yaml\");\n```\n\n## Tests to Convert (6 tests in tests/config_tests.rs)\n1. test_valid_basic_config (line 9)\n2. test_config_with_replacements (line 38)\n3. test_config_validation_invalid_schema (line 79)\n4. test_config_validation_missing_env_var (line 102) - already uses MockSystem correctly!\n5. test_minimal_config (line 129)\n6. test_config_directory_traversal_protection (line 152)\n\n## Benefits\n- No filesystem I/O = faster tests\n- No temp directory cleanup\n- Better isolation\n- Follows established MockSystem pattern","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T01:20:05.842179-04:00","updated_at":"2025-10-27T01:26:34.886483-04:00","closed_at":"2025-10-27T01:26:34.886483-04:00","labels":["cleanup","testing"]}
{"id":"graft-56","title":"Document: Integration tests must use real filesystem (not MockSystem)","description":"","design":"## Why Integration Tests CANNOT Use MockSystem\n\nIntegration tests run the compiled binary as a subprocess via `Command::cargo_bin()`. The binary runs in its own process and cannot access the parent's in-memory MockSystem.\n\n## Integration Test Files (DO NOT CONVERT)\n\n### 1. cli_tests.rs (6 tests)\n- Pattern: TempDir + fs::write + Command::cargo_bin()\n- Tests: CLI parsing, validation, error handling\n\n### 2. context_tests.rs (14 tests)\n- Pattern: TempDir + fs:: + Command::cargo_bin().env()\n- Tests: .graft.yaml discovery, context validation, post-commands\n\n### 3. local_tests.rs (14 tests)\n- Pattern: TempDir + fs:: + Command::cargo_bin().env()\n- Tests: Local file:// repositories, replacements\n\n### 4. sparse_checkout_tests.rs (3 tests)\n- Pattern: TempDir + git commands + fs:: + Command::cargo_bin()\n- Tests: Git sparse checkout with nested paths\n\n### 5. to_config_tests.rs (12 tests)\n- Pattern: NamedTempFile + Command::cargo_bin().env()\n- Tests: --to-config flag, CLI to YAML conversion\n\n### 6. to_command_line_tests.rs (11 tests)\n- Pattern: NamedTempFile + Command::cargo_bin().env()\n- Tests: --to-command-line flag, YAML to CLI conversion\n\n## Summary\n- Integration tests (6 files, ~60 tests): KEEP TempDir/fs::/env::\n- Unit tests (config_tests.rs): CONVERT to MockSystem\n\nMockSystem is only for unit tests that call library code directly.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-27T01:20:20.612863-04:00","updated_at":"2025-10-27T01:27:20.669424-04:00","closed_at":"2025-10-27T01:27:20.669424-04:00","labels":["documentation","testing"]}
{"id":"graft-57","title":"Convert context_tests.rs to use MockSystem","description":"","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-27T01:31:53.252239-04:00","updated_at":"2025-10-27T01:52:42.860001-04:00","closed_at":"2025-10-27T01:52:42.860011-04:00","labels":["refactor","testing"]}
{"id":"graft-58","title":"Convert other integration tests to use MockSystem","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T01:31:53.33575-04:00","updated_at":"2025-10-28T22:46:42.661159-04:00","closed_at":"2025-10-28T22:46:42.661159-04:00","labels":["refactor","testing"]}
{"id":"graft-59","title":"Fix System trait usage in graft_yaml.rs load_from_file","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-28T10:32:59.64772-04:00","updated_at":"2025-10-28T10:55:07.338441-04:00","closed_at":"2025-10-28T10:55:07.338441-04:00","labels":["backend","pr-review","refactor"],"comments":[{"id":6,"issue_id":"graft-59","author":"eburgos","text":"Fixed System trait usage in graft_yaml.rs load_from_file.\n\nChanges:\n- Updated load_from_file() signature to accept \u0026dyn System parameter\n- Replaced path.exists() with system.exists(path)\n- Replaced std::fs::read_to_string with system.read_to_string(path)\n- Updated call site in pull.rs to pass self.system\n- Updated two tests to create and pass RealSystem instance\n\nThis continues the System trait abstraction for consistent filesystem operations and proper testability.","created_at":"2025-10-28T14:54:52Z"}]}
{"id":"graft-6","title":"Implement RealSystem in src/system/real.rs","description":"Create RealSystem struct that delegates to std::env and std::fs. Zero-cost wrapper for production.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.573835-04:00","updated_at":"2025-10-26T12:00:04.661379-04:00","closed_at":"2025-10-26T12:00:04.661379-04:00","dependencies":[{"issue_id":"graft-6","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.574557-04:00","created_by":"daemon"}]}
{"id":"graft-60","title":"Fix System trait usage in discovery.rs cleanup_graft_files","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-28T10:32:59.892478-04:00","updated_at":"2025-10-28T10:52:59.325235-04:00","closed_at":"2025-10-28T10:52:59.325235-04:00","labels":["backend","pr-review","refactor"],"comments":[{"id":5,"issue_id":"graft-60","author":"eburgos","text":"Fixed System trait usage in discovery.rs cleanup_graft_files.\n\nChanges:\n- Added remove_file() method to System trait (mod.rs)\n- Implemented remove_file() in RealSystem using fs::remove_file\n- Implemented remove_file() in MockSystem with proper error handling\n- Updated cleanup_graft_files() signature to accept \u0026dyn System parameter\n- Updated cleanup_graft_files() to use system.remove_file() and system.exists()\n- Updated call site in pull.rs to pass self.system\n- Updated test to create and pass RealSystem instance\n\nThis completes the System trait abstraction, enabling proper testing and consistency across all filesystem operations.","created_at":"2025-10-28T14:52:50Z"}]}
{"id":"graft-61","title":"Replace walkdir with ignore crate for gitignore support","description":"","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-28T10:33:15.622579-04:00","updated_at":"2025-10-28T10:48:42.726936-04:00","closed_at":"2025-10-28T10:48:42.726936-04:00","labels":["backend","breaking","pr-review"],"comments":[{"id":3,"issue_id":"graft-61","author":"eburgos","text":"Replaced walkdir crate with ignore crate (v0.4) throughout the codebase:\n\nChanges:\n- Updated Cargo.toml dependency\n- Migrated discovery.rs to use WalkBuilder with .hidden(false) to include .graft.yaml files\n- Migrated copy.rs to use WalkBuilder in copy_directory, calculate_copy_size, and count_files_to_copy\n- Used .skip(1) instead of .min_depth(1) for equivalent behavior\n- All tests passing (89 unit tests + 62 integration tests)\n\nBenefits:\n- Automatic gitignore support for file operations\n- Better performance\n- Consistent with modern Rust ecosystem tools (ripgrep, etc.)\n\nBreaking: This may change behavior for users with .gitignore files in source directories","created_at":"2025-10-28T14:48:38Z"}]}
{"id":"graft-62","title":"Enhanced pattern matching for post-command expectedOutput","description":"","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-28T10:33:15.840358-04:00","updated_at":"2025-10-28T11:32:44.548153-04:00","closed_at":"2025-10-28T11:32:44.548153-04:00","labels":["backend","breaking","pr-review"],"comments":[{"id":9,"issue_id":"graft-62","author":"eburgos","text":"Enhanced pattern matching for post-command expectedOutput with regex support.\n\nChanges:\n- Added regex crate import to post_commands.rs\n- Updated execute_choice() to use Regex::new() and is_match() instead of simple contains()\n- Added comprehensive documentation explaining regex pattern matching\n- Backward compatible: simple strings still work as they are valid regex patterns\n- Added two new tests:\n  - test_execute_choice_with_regex_pattern: Verifies regex patterns like 'v\\d+\\.\\d+\\.\\d+' work\n  - test_execute_choice_regex_no_match: Verifies non-matching patterns return no-op result\n- All existing tests pass, confirming backward compatibility\n\nBreaking: While technically breaking (changes matching behavior), simple strings continue to work.\nUsers can now use full regex patterns for more precise output matching in conditional commands.","created_at":"2025-10-28T15:32:38Z"}]}
{"id":"graft-63","title":"Fix fail-fast behavior in post-command execution","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-28T10:33:16.074205-04:00","updated_at":"2025-10-28T10:50:03.072832-04:00","closed_at":"2025-10-28T10:50:03.072832-04:00","labels":["backend","pr-review"],"comments":[{"id":4,"issue_id":"graft-63","author":"eburgos","text":"Fixed fail-fast behavior in post-command execution.\n\nChanges:\n- Modified execute_post_commands() to continue executing all commands even when some fail\n- Errors during command execution are now captured as failed ExecutionResult entries\n- Added test_continue_on_command_failure() to verify behavior\n\nThis ensures that one failing command doesn't prevent subsequent commands from running, matching the intent in pull.rs:474 comment 'Log any command failures (but don't fail the operation)'.\n\nAll commands are now executed and their results collected, with failures logged rather than causing early termination.","created_at":"2025-10-28T14:49:59Z"}]}
{"id":"graft-64","title":"Add YAML error line numbers to graft_yaml.rs parsing errors","description":"","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-28T10:33:51.008131-04:00","updated_at":"2025-10-28T11:30:05.868376-04:00","closed_at":"2025-10-28T11:30:05.868376-04:00","labels":["backend","dx","pr-review"],"comments":[{"id":8,"issue_id":"graft-64","author":"eburgos","text":"Added YAML error line numbers to graft_yaml.rs parsing errors.\n\nChanges:\n- Updated load_from_string() to extract line and column information from serde_yaml errors\n- Errors now show format: 'Failed to parse .graft.yaml at line X, column Y: \u003cerror\u003e'\n- Falls back to generic message if location is not available\n- Updated test_invalid_graft_yaml_syntax to verify line/column information is present\n\nThis significantly improves the developer experience when debugging invalid YAML files by pointing directly to the problematic line and column.","created_at":"2025-10-28T15:29:59Z"}]}
{"id":"graft-65","title":"Document symlink and gitignore behavior in .graft.yaml discovery","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T10:33:51.555405-04:00","updated_at":"2025-10-28T11:28:14.407459-04:00","closed_at":"2025-10-28T11:28:14.407459-04:00","labels":["docs","pr-review"],"comments":[{"id":7,"issue_id":"graft-65","author":"eburgos","text":"Documented symlink and gitignore behavior in .graft.yaml discovery.\n\nChanges:\n- Added comprehensive module-level documentation explaining:\n  - Gitignore support: Respects .gitignore, .ignore, and other ignore files\n  - Symlink behavior: Does not follow symbolic links to prevent loops\n  - Hidden file behavior: Includes hidden files (required to find .graft.yaml)\n- Enhanced discover_graft_files() function documentation with:\n  - Detailed behavior section\n  - Arguments section\n  - Returns section explaining the data structure\n  - Errors section listing all error conditions\n\nDocumentation builds successfully with no warnings.","created_at":"2025-10-28T15:28:09Z"}]}
{"id":"graft-66","title":"Separate unit tests from logic files","description":"Extract inline unit tests from src/ files into separate test files in tests/ directory. Found 16 files with #[cfg(test)] modules that should be refactored.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T12:17:30.525297-04:00","updated_at":"2025-10-28T13:40:21.805681-04:00","closed_at":"2025-10-28T13:40:21.805681-04:00","labels":["refactor","testing"]}
{"id":"graft-67","title":"Refactor directory walking to use System trait","description":"Currently copy_directory and discover_graft_files use WalkBuilder from ignore crate directly, which requires real filesystem. Need to add read_dir_recursive to System trait so MockSystem can be used in all tests.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T22:48:53.721428-04:00","updated_at":"2025-10-28T22:56:56.348907-04:00","closed_at":"2025-10-28T22:56:56.348907-04:00","labels":["refactor","testing"]}
{"id":"graft-7","title":"Implement MockSystem in src/system/mock.rs","description":"Create MockSystem with in-memory HashMap for env vars and files, HashSet for directories. Builder pattern for test setup.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.636587-04:00","updated_at":"2025-10-26T12:00:04.6719-04:00","closed_at":"2025-10-26T12:00:04.6719-04:00","dependencies":[{"issue_id":"graft-7","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.637492-04:00","created_by":"daemon"}]}
{"id":"graft-8","title":"Refactor src/utils/fs.rs to accept System trait","description":"Update all utility functions to take \u0026amp;dyn System parameter. Replace all std::fs calls with system.*","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.699635-04:00","updated_at":"2025-10-26T12:02:37.786718-04:00","closed_at":"2025-10-26T12:02:37.786718-04:00","dependencies":[{"issue_id":"graft-8","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.70065-04:00","created_by":"daemon"}]}
{"id":"graft-9","title":"Refactor src/operations/replace.rs to use System","description":"Update function signatures to accept \u0026amp;dyn System. Replace std::env::var and fs::* calls with system methods.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-26T11:52:35.785291-04:00","updated_at":"2025-10-26T12:04:13.947843-04:00","closed_at":"2025-10-26T12:04:13.947843-04:00","dependencies":[{"issue_id":"graft-9","depends_on_id":"graft-3","type":"blocks","created_at":"2025-10-26T11:52:35.786642-04:00","created_by":"daemon"}]}
